version: '3'

services:
  base: &base
    image: ruby:3.2.2-alpine
    env_file: .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
      - redis
      - webpack
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_MAX_THREADS=${RAILS_MAX_THREADS:-5}
      - POSTGRES_HOST=postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=
      - RAILS_LOG_TO_STDOUT=true
    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
    working_dir: /app

  rails:
    <<: *base
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  sidekiq:
    <<: *base
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep sidekiq || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:13-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chatwoot_production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis:/data
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  webpack:
    image: node:16-alpine
    env_file: .env
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
    working_dir: /app
    command: ["yarn", "run", "build:watch"]
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep webpack || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025

volumes:
  postgres:
  redis:
  packs:
  node_modules:
  cache:
  bundle:
